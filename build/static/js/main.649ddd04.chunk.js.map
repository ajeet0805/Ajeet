{"version":3,"sources":["component/Hooks.js","App.js","serviceWorker.js","index.js"],"names":["obj","mName","NameForm","props","useState","month","showMonth","setMonth","data","color","colorChange","currentItem","setIDx","costIdx","setcost","costIndex","setcostindex","FilterColor","e","idx","target","id","split","console","log","dd","Variant","cost","months","indexOf","alert","parseInt","name","colorChanges","m","className","onChange","preventDefault","value","map","item","key","itdx","index","ix","jidx","style","backgroundColor","onMouseEnter","height","brand","i","App","Hooks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.649ddd04.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nconst obj = {\"data\": [{\"id\": \"PRODUCT_ID_1\",\"name\": \"Product1\",\"brand\": \"Brand1\",\"Variant\": [{\"type\": \"default\",\"variationId\":\"PRODUCT_ID_1_VAR_ID_0\",\"cost\": 123,\"color\": \"red\",\"months\": [\"November\", \"December\", \"January\"]},\n{\"type\": \"variation\",\"variationId\": \"PRODUCT_ID_1_VAR_ID_1\",\"cost\": 106,\"color\": \"orange\",\"months\": [\"November\", \"December\", \"January\"]}]\n},\n{\"id\": \"PRODUCT_ID_2\",\"name\": \"roduct2\",\"brand\": \"Brand2\",\"Variant\": [{\"type\": \"default\",\"variationId\": \"PRODUCT_ID_2_VAR_ID_0\",\"cost\": 225,\n\"color\": \"green\",\"months\": [\"January\", \"Feburary\"]\n},\n{\"type\": \"variation\",\"variationId\": \"PRODUCT_ID_2_VAR_ID_1\",\"cost\": 350,\"color\": \"purple\",\"months\": [\"January\", \"February\", \"March\"]}]\n}]};\nconst mName=[\"January\", \"Feburary\",\"March\",\"April\",\"May\",\"June\",\"August\",\"September\",\"October\",\"November\", \"December\"];\nfunction NameForm(props) {\n\tconst[month] = useState(mName);\n\tconst[showMonth,setMonth] = useState('January');\n    const[data] = useState(obj.data);\n\tconst[color ,colorChange] =useState();\n\tconst[currentItem ,setIDx] =useState(null);\t\n\tconst[costIdx ,setcost] =useState(null);\n\tconst[costIndex,setcostindex] =useState(null);\t\n\t\n//console.log(data);\nfunction selectMonth(e){\t\n\te.preventDefault();\t\n\tsetMonth(e.target.value);\n\n}\nfunction FilterColor(e){\n\t const idx = e.target.id;\n\t  const id = idx.split(\"_\"); console.log(idx);\n\t  const dd = data[id[1]].Variant[id[2]].cost;\n\t  let m = data[id[1]].Variant[id[2]].months;\n\t  const myIDx= m.indexOf(showMonth);\n\t  if(myIDx===-1)\n\t  {\n\t\t  alert(\"This color is not available for this Month\");\n\t\t  return false;\n\t  }\n\t  setcostindex(parseInt(id[1]));\n\t  setcost(dd);\n\t  setIDx(parseInt(id[1]));\n\t  colorChange(e.target.name);\n\n}\nfunction colorChanges(e){\n\t  const idx = e.target.id;\n\t  const id = idx.split(\"_\");\n\t  const dd = data[id[1]].Variant[id[2]].cost;\n\t  let m = data[id[1]].Variant[id[2]].months;console.log(m);\n\t  setcostindex(parseInt(id[1]));\n\t  setcost(dd);\n\t  setIDx(parseInt(id[1]));\n\t  colorChange(e.target.name);\n}\n  return (\n\t<div className=\"w3-container\">\n\t\t<div className=\"w3-bar w3-black\"><button className=\"w3-button\">Test</button></div>\n\t   <div className=\"w3-row w3-border\">\t\t\n\t\t<div className=\"w3-third w3-container w3-margin-top\">\n\t\t <select onChange={selectMonth} className=\"w3-input w3-border\">\n\t\t{\n\t\tmonth.map(item=>{\n\t\treturn <option value={item} key={item}>{item}</option>\n\t\t})\t\n\t\t}\n\t\t</select>\n        \n\n\t\t{\n\t\tdata.map((itdx,index)=>{\n\t\treturn(\n\t\t<div className=\"w3-section\" key={index}>\t\n\t\t\t{\n\t\t\titdx.Variant.map((ix,jidx)=><button className=\"w3-button w3-large w3-circle w3-xlarge w3-ripple w3-margin-right\" key={index+\"_\"+ix.color} name={ix.color} id={ix.color+\"_\"+index+\"_\"+jidx} style={{backgroundColor:ix.color}} onMouseEnter={FilterColor}></button>)  \n\t\t\t}\n\t\t</div>\n\t\t)\t\t\t  \n\t\n\t\t})\n\t}\n\t\t</div>\n\t\t<div className=\"w3-twothird w3-container w3-border\">\n\t\t\t\n\t\t{\n\t\t\t\t data.map((idx ,index)=>{\n                  return(<>\n\t\t\t\t  \t\t<div className=\"w3-row\">\n\t\t\t\t\t\t\t\t<div className=\"w3-half w3-container w3-border\"\n\t\t\t\t\t\t\t\t style={{height:\"125px\", backgroundColor: currentItem ===index ? color :idx.Variant[index].color}}>\n\t\t\t\t\t\t\t\t\t{currentItem ===index ? color:idx.Variant[index].color}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w3-half w3-container w3-border\">\n\t\t\t\t\t\t\t\t<div className=\"w3-container\">\n\t\t\t\t\t\t    \t<span>Product Name :{idx.name}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w3-container\">\n\t\t\t\t\t\t\t       <span>By  :{idx.brand}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w3-container\">\n\t\t\t\t\t\t\t\t\t<span>Cost :{costIndex===index ? costIdx : idx.Variant[index].cost}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w3-container\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t<div className=\"w3-section\">\t\n\t\t\t\t\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t\t\t\t\tidx.Variant.map((idx,i)=><button className=\"w3-button w3-large w3-circle w3-xlarge w3-ripple w3-margin-right\" key={idx.color+\"_\"+index+\"_\"} name={idx.color} id={idx.color+\"_\"+index+\"_\"+i} style={{backgroundColor:idx.color}} onMouseEnter={colorChanges}></button>)  \n\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t \t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t  </>\n\n\n\t\t\t\t  )\n\n\t\t\t\t })\n\t\t\t\n\t\t\t}             \n\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t \n\t\t\t\n\t\t  </div>\n\t</div>\n\t</div>\n\n  );\n}\nexport default NameForm;\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import Color from './component/Color';\n import Hooks from './component/Hooks';\n\n \nfunction App() {\n  return (\n    <>\n\t<Hooks/>\n   </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'w3-css/w3.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}